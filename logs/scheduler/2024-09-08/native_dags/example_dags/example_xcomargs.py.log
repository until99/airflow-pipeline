[2024-09-08T15:26:54.901-0300] {processor.py:186} INFO - Started process (PID=31795) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:26:54.901-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:26:54.903-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:26:54.903-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:26:54.910-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:26:54.922-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:26:54.922-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:26:54.931-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:26:54.931-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:26:54.933-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:26:54.933-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:26:55.018-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.121 seconds
[2024-09-08T15:27:50.989-0300] {processor.py:186} INFO - Started process (PID=32133) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:27:50.990-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:27:50.991-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:27:50.991-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:27:50.998-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:27:51.012-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:27:51.012-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:27:51.021-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:27:51.021-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:27:51.024-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:27:51.024-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:27:51.042-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.057 seconds
[2024-09-08T15:28:42.942-0300] {processor.py:186} INFO - Started process (PID=32305) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:28:42.943-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:28:42.945-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:28:42.944-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:28:42.954-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:28:42.973-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:28:42.972-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:28:42.985-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:28:42.985-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:28:42.988-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:28:42.988-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:28:43.005-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.067 seconds
[2024-09-08T15:29:35.697-0300] {processor.py:186} INFO - Started process (PID=32407) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:29:35.698-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:29:35.700-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:29:35.699-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:29:35.707-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:29:35.718-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:29:35.718-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:29:35.727-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:29:35.727-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:29:35.729-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:29:35.729-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:29:35.749-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.055 seconds
[2024-09-08T15:30:26.961-0300] {processor.py:186} INFO - Started process (PID=32653) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:30:26.962-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:30:26.963-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:30:26.963-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:30:26.970-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:30:26.982-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:30:26.982-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:30:26.991-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:30:26.991-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:30:26.993-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:30:26.993-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:30:27.010-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.053 seconds
[2024-09-08T15:31:14.359-0300] {processor.py:186} INFO - Started process (PID=32789) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:31:14.361-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:31:14.363-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:31:14.362-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:31:14.370-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:31:14.382-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:31:14.382-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:31:14.391-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:31:14.391-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:31:14.394-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:31:14.394-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:31:14.410-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.054 seconds
[2024-09-08T15:32:02.468-0300] {processor.py:186} INFO - Started process (PID=32953) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:32:02.469-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:32:02.470-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:32:02.470-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:32:02.478-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:32:02.490-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:32:02.490-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:32:02.499-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:32:02.499-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:32:02.502-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:32:02.502-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:32:02.517-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.056 seconds
[2024-09-08T15:32:52.489-0300] {processor.py:186} INFO - Started process (PID=33074) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:32:52.490-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:32:52.491-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:32:52.490-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:32:52.497-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:32:52.509-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:32:52.508-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:32:52.517-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:32:52.517-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:32:52.519-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:32:52.519-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:32:52.535-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.050 seconds
[2024-09-08T15:33:40.952-0300] {processor.py:186} INFO - Started process (PID=33330) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:33:40.953-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:33:40.954-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:33:40.953-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:33:40.962-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:33:40.973-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:33:40.973-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:33:40.982-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:33:40.982-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:33:40.984-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:33:40.984-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:33:41.001-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.053 seconds
[2024-09-08T15:34:30.644-0300] {processor.py:186} INFO - Started process (PID=33535) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:34:30.645-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:34:30.646-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:34:30.646-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:34:30.653-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:34:30.668-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:34:30.667-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:34:30.679-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:34:30.679-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:34:30.682-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:34:30.682-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:34:30.699-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.059 seconds
[2024-09-08T15:35:28.594-0300] {processor.py:186} INFO - Started process (PID=33803) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:35:28.595-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:35:28.596-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:35:28.596-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:35:28.602-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:35:28.615-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:35:28.615-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:35:28.623-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:35:28.623-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:35:28.625-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:35:28.625-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:35:28.643-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.052 seconds
[2024-09-08T15:36:23.096-0300] {processor.py:186} INFO - Started process (PID=33962) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:36:23.100-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:36:23.102-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:36:23.102-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:36:23.108-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:36:23.120-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:36:23.119-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:36:23.128-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:36:23.127-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:36:23.130-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:36:23.130-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:36:23.145-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.052 seconds
[2024-09-08T15:37:13.361-0300] {processor.py:186} INFO - Started process (PID=34079) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:37:13.362-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:37:13.363-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:37:13.363-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:37:13.371-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:37:13.383-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:37:13.383-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:37:13.392-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:37:13.392-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:37:13.395-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:37:13.394-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:37:13.411-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.053 seconds
[2024-09-08T15:38:01.493-0300] {processor.py:186} INFO - Started process (PID=34289) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:38:01.494-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:38:01.496-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:38:01.495-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:38:01.502-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:38:01.515-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:38:01.514-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:38:01.524-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:38:01.523-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:38:01.526-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:38:01.526-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:38:01.544-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.055 seconds
[2024-09-08T15:38:54.521-0300] {processor.py:186} INFO - Started process (PID=34621) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:38:54.526-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:38:54.527-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:38:54.527-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:38:54.533-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:38:54.546-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:38:54.546-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:38:54.554-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:38:54.554-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:38:54.557-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:38:54.557-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:38:54.574-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.056 seconds
[2024-09-08T15:39:47.279-0300] {processor.py:186} INFO - Started process (PID=34937) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:39:47.279-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:39:47.281-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:39:47.281-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:39:47.287-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:39:47.299-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:39:47.299-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:39:47.308-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:39:47.308-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:39:47.310-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:39:47.310-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:39:47.327-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.051 seconds
[2024-09-08T15:40:39.161-0300] {processor.py:186} INFO - Started process (PID=35285) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:40:39.162-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:40:39.163-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:40:39.162-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:40:39.169-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:40:39.180-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:40:39.180-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:40:39.260-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:40:39.260-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:40:39.262-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:40:39.262-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:40:39.276-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.119 seconds
[2024-09-08T15:41:31.071-0300] {processor.py:186} INFO - Started process (PID=35513) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:41:31.088-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:41:31.090-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:41:31.090-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:41:31.098-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:41:31.112-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:41:31.112-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:41:31.121-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:41:31.121-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:41:31.124-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:41:31.123-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:41:31.170-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.102 seconds
[2024-09-08T15:42:20.062-0300] {processor.py:186} INFO - Started process (PID=35586) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:42:20.063-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:42:20.065-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:42:20.064-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:42:20.072-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:42:20.085-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:42:20.085-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:42:20.095-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:42:20.095-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:42:20.098-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:42:20.098-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:42:20.113-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.055 seconds
[2024-09-08T15:43:13.777-0300] {processor.py:186} INFO - Started process (PID=35801) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:43:13.778-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:43:13.780-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:43:13.780-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:43:13.788-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:43:13.802-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:43:13.802-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:43:13.812-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:43:13.812-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:43:13.815-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:43:13.815-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:43:13.832-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.059 seconds
[2024-09-08T15:44:06.293-0300] {processor.py:186} INFO - Started process (PID=36005) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:44:06.294-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:44:06.295-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:44:06.295-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:44:06.303-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:44:06.317-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:44:06.317-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:44:06.327-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:44:06.327-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:44:06.329-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:44:06.329-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:44:06.346-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.058 seconds
[2024-09-08T15:44:58.865-0300] {processor.py:186} INFO - Started process (PID=36199) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:44:58.866-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:44:58.867-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:44:58.867-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:44:58.874-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:44:58.886-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:44:58.885-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:44:58.894-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:44:58.893-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:44:58.896-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:44:58.896-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:44:58.913-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.051 seconds
[2024-09-08T15:45:50.722-0300] {processor.py:186} INFO - Started process (PID=36376) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:45:50.722-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:45:50.724-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:45:50.723-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:45:50.731-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:45:50.750-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:45:50.749-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:45:50.762-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:45:50.761-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:45:50.764-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:45:50.764-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:45:50.783-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.067 seconds
[2024-09-08T15:46:44.417-0300] {processor.py:186} INFO - Started process (PID=36560) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:46:44.417-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:46:44.419-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:46:44.418-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:46:44.425-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:46:44.437-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:46:44.437-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:46:44.446-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:46:44.446-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:46:44.449-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:46:44.449-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:46:44.469-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.056 seconds
[2024-09-08T15:47:36.101-0300] {processor.py:186} INFO - Started process (PID=36753) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:47:36.102-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:47:36.103-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:47:36.103-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:47:36.109-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:47:36.122-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:47:36.122-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:47:36.130-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:47:36.130-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:47:36.133-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:47:36.133-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:47:36.149-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.051 seconds
[2024-09-08T15:48:33.950-0300] {processor.py:186} INFO - Started process (PID=37052) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:48:33.951-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:48:33.953-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:48:33.953-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:48:33.962-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:48:33.988-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:48:33.987-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:48:34.004-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:48:34.003-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:48:34.007-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:48:34.007-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:48:34.037-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.091 seconds
[2024-09-08T15:49:26.488-0300] {processor.py:186} INFO - Started process (PID=37607) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:49:26.489-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:49:26.490-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:49:26.490-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:49:26.498-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:49:26.510-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:49:26.510-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:49:26.519-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:49:26.519-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:49:26.521-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:49:26.521-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:49:26.537-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.052 seconds
[2024-09-08T15:50:19.486-0300] {processor.py:186} INFO - Started process (PID=38227) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:50:19.486-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:50:19.488-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:50:19.488-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:50:19.496-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:50:19.509-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:50:19.509-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:50:19.519-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:50:19.519-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:50:19.522-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:50:19.521-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:50:19.538-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.057 seconds
[2024-09-08T15:51:11.255-0300] {processor.py:186} INFO - Started process (PID=38788) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:51:11.256-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:51:11.257-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:51:11.257-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:51:11.264-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:51:11.276-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:51:11.276-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:51:11.284-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:51:11.284-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:51:11.287-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:51:11.286-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:51:11.302-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.050 seconds
[2024-09-08T15:52:01.581-0300] {processor.py:186} INFO - Started process (PID=39163) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:52:01.582-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:52:01.584-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:52:01.583-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:52:01.591-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:52:01.607-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:52:01.607-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:52:01.617-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:52:01.617-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:52:01.620-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:52:01.620-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:52:01.638-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.061 seconds
[2024-09-08T15:52:53.043-0300] {processor.py:186} INFO - Started process (PID=39396) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:52:53.064-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:52:53.067-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:52:53.066-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:52:53.075-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:52:53.088-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:52:53.088-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:52:53.098-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:52:53.098-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:52:53.101-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:52:53.101-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:52:53.118-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.081 seconds
[2024-09-08T15:53:42.060-0300] {processor.py:186} INFO - Started process (PID=40862) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:53:42.061-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:53:42.062-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:53:42.062-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:53:42.069-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:53:42.081-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:53:42.081-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:53:42.089-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:53:42.089-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:53:42.092-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:53:42.092-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:53:42.109-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.053 seconds
[2024-09-08T15:54:30.578-0300] {processor.py:186} INFO - Started process (PID=41078) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:54:30.579-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:54:30.580-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:54:30.580-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:54:30.588-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:54:30.600-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:54:30.600-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:54:30.610-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:54:30.610-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:54:30.612-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:54:30.612-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:54:30.630-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.055 seconds
[2024-09-08T15:55:23.522-0300] {processor.py:186} INFO - Started process (PID=41266) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:55:23.522-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:55:23.524-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:55:23.523-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:55:23.530-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:55:23.542-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:55:23.542-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:55:23.550-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:55:23.550-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:55:23.553-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:55:23.552-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:55:23.568-0300] {processor.py:208} INFO - Processing /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py took 0.050 seconds
[2024-09-08T15:56:29.046-0300] {processor.py:186} INFO - Started process (PID=41805) to work on /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:56:29.047-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:56:29.048-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:56:29.048-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:56:29.055-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:56:29.067-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:56:29.066-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:56:29.075-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:56:29.075-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T15:56:29.076-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:56:29.075-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T15:56:29.076-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:56:29.076-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:56:29.076-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:56:29.076-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:56:29.185-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:56:29.183-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T15:56:29.186-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:56:29.185-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T15:56:29.186-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:56:29.186-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:56:29.187-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/share/pipx/venvs/apache-airflow/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T15:57:05.371-0300] {processor.py:186} INFO - Started process (PID=42166) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:57:05.372-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:57:05.373-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:57:05.373-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:57:05.381-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:57:05.505-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:57:05.504-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:57:05.519-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:57:05.519-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T15:57:05.520-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:57:05.520-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T15:57:05.521-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:57:05.521-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:57:05.522-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:57:05.522-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:57:05.772-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:57:05.770-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T15:57:05.774-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:57:05.773-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T15:57:05.775-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:57:05.774-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:57:05.776-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T15:59:11.437-0300] {processor.py:186} INFO - Started process (PID=43487) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:59:11.438-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T15:59:11.440-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:59:11.439-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:59:11.452-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T15:59:11.579-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:59:11.579-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:59:11.589-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:59:11.588-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T15:59:11.590-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:59:11.590-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T15:59:11.591-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:59:11.591-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T15:59:11.592-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:59:11.591-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T15:59:11.763-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:59:11.760-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T15:59:11.765-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:59:11.764-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T15:59:11.765-0300] {logging_mixin.py:190} INFO - [2024-09-08T15:59:11.765-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T15:59:11.766-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:00:57.900-0300] {processor.py:186} INFO - Started process (PID=44725) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:00:57.901-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:00:57.903-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:00:57.902-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:00:57.912-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:00:58.014-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:00:58.013-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:00:58.024-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:00:58.023-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:00:58.024-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:00:58.024-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:00:58.025-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:00:58.025-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:00:58.025-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:00:58.025-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:00:58.195-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:00:58.192-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:00:58.196-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:00:58.196-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:00:58.197-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:00:58.197-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:00:58.198-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:02:46.162-0300] {processor.py:186} INFO - Started process (PID=45617) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:02:46.162-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:02:46.164-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:02:46.163-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:02:46.171-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:02:46.246-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:02:46.246-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:02:46.254-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:02:46.254-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:02:46.254-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:02:46.254-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:02:46.254-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:02:46.254-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:02:46.255-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:02:46.255-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:02:46.733-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:02:46.731-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:02:46.734-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:02:46.733-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:02:46.734-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:02:46.734-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:02:46.735-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:04:20.528-0300] {processor.py:186} INFO - Started process (PID=46621) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:04:20.529-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:04:20.532-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:04:20.532-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:04:20.540-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:04:20.643-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:04:20.642-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:04:20.653-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:04:20.653-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:04:20.654-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:04:20.653-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:04:20.654-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:04:20.654-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:04:20.654-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:04:20.654-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:04:20.976-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:04:20.974-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:04:20.977-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:04:20.977-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:04:20.978-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:04:20.978-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:04:20.978-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:05:54.190-0300] {processor.py:186} INFO - Started process (PID=47478) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:05:54.323-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:05:54.325-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:05:54.325-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:05:54.332-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:05:54.415-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:05:54.415-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:05:54.423-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:05:54.423-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:05:54.424-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:05:54.424-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:05:54.424-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:05:54.424-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:05:54.425-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:05:54.425-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:05:54.702-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:05:54.701-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:05:54.703-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:05:54.703-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:05:54.703-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:05:54.703-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:05:54.704-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:07:24.674-0300] {processor.py:186} INFO - Started process (PID=48256) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:07:24.679-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:07:24.681-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:07:24.680-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:07:24.687-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:07:24.842-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:07:24.842-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:07:24.849-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:07:24.849-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:07:24.849-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:07:24.849-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:07:24.850-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:07:24.850-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:07:24.850-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:07:24.850-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:07:25.108-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:07:25.106-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:07:25.109-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:07:25.109-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:07:25.110-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:07:25.109-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:07:25.110-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:08:59.876-0300] {processor.py:186} INFO - Started process (PID=49103) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:08:59.877-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:08:59.878-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:08:59.877-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:08:59.884-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:09:00.049-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:09:00.049-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:09:00.056-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:09:00.056-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:09:00.057-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:09:00.057-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:09:00.057-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:09:00.057-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:09:00.057-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:09:00.057-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:09:00.529-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:09:00.528-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:09:00.531-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:09:00.530-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:09:00.531-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:09:00.531-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:09:00.532-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:10:36.388-0300] {processor.py:186} INFO - Started process (PID=50199) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:10:36.389-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:10:36.390-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:10:36.390-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:10:36.397-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:10:36.578-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:10:36.577-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:10:36.589-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:10:36.589-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:10:36.590-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:10:36.589-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:10:36.590-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:10:36.590-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:10:36.591-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:10:36.590-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:10:36.768-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:10:36.766-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:10:36.769-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:10:36.769-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:10:36.770-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:10:36.769-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:10:36.770-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:12:06.638-0300] {processor.py:186} INFO - Started process (PID=50903) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:12:06.639-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:12:06.640-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:12:06.640-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:12:06.647-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:12:06.732-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:12:06.732-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:12:06.739-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:12:06.739-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:12:06.740-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:12:06.740-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:12:06.740-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:12:06.740-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:12:06.741-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:12:06.741-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:12:07.228-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:12:07.227-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:12:07.230-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:12:07.229-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:12:07.230-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:12:07.230-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:12:07.231-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:13:35.669-0300] {processor.py:186} INFO - Started process (PID=51724) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:13:35.793-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:13:35.795-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:13:35.795-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:13:35.802-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:13:35.943-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:13:35.943-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:13:35.951-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:13:35.951-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:13:35.952-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:13:35.952-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:13:35.952-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:13:35.952-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:13:35.953-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:13:35.953-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:13:36.205-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:13:36.204-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:13:36.207-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:13:36.206-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:13:36.207-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:13:36.207-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:13:36.209-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:14:30.418-0300] {processor.py:186} INFO - Started process (PID=52249) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:14:30.419-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:14:30.420-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:14:30.420-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:14:30.427-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:14:30.509-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:14:30.508-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:14:30.516-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:14:30.516-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:14:30.516-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:14:30.516-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:14:30.517-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:14:30.517-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:14:30.517-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:14:30.517-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:14:30.720-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:14:30.718-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:14:30.721-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:14:30.720-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:14:30.721-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:14:30.721-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:14:30.722-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:15:48.353-0300] {processor.py:186} INFO - Started process (PID=52871) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:15:48.353-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:15:48.355-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:15:48.354-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:15:48.362-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:15:48.445-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:15:48.445-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:15:48.453-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:15:48.453-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:15:48.454-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:15:48.454-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:15:48.454-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:15:48.454-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:15:48.455-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:15:48.455-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:15:48.542-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:15:48.541-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:15:48.543-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:15:48.543-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:15:48.544-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:15:48.544-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:15:48.545-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:17:05.418-0300] {processor.py:186} INFO - Started process (PID=53445) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:17:05.418-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:17:05.420-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:17:05.419-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:17:05.427-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:17:05.505-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:17:05.504-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:17:05.512-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:17:05.511-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:17:05.512-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:17:05.512-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:17:05.512-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:17:05.512-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:17:05.513-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:17:05.513-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:17:05.683-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:17:05.681-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:17:05.684-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:17:05.683-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:17:05.684-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:17:05.684-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:17:05.685-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:18:17.761-0300] {processor.py:186} INFO - Started process (PID=54061) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:18:17.762-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:18:17.763-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:18:17.763-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:18:17.771-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:18:17.857-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:18:17.856-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:18:17.864-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:18:17.864-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:18:17.865-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:18:17.865-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:18:17.865-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:18:17.865-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:18:17.866-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:18:17.866-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:18:18.004-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:18:18.003-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:18:18.006-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:18:18.005-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:18:18.006-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:18:18.006-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:18:18.007-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:19:41.052-0300] {processor.py:186} INFO - Started process (PID=54861) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:19:41.053-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:19:41.053-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:19:41.053-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:19:41.061-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:19:41.138-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:19:41.138-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:19:41.146-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:19:41.146-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:19:41.146-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:19:41.146-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:19:41.147-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:19:41.147-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:19:41.147-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:19:41.147-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:19:41.429-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:19:41.428-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:19:41.430-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:19:41.430-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:19:41.431-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:19:41.431-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:19:41.431-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:21:02.203-0300] {processor.py:186} INFO - Started process (PID=55824) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:21:02.204-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:21:02.204-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:21:02.204-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:21:02.212-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:21:02.299-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:21:02.299-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:21:02.308-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:21:02.308-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:21:02.308-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:21:02.308-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:21:02.309-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:21:02.309-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:21:02.309-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:21:02.309-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:21:02.408-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:21:02.406-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:21:02.409-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:21:02.408-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:21:02.409-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:21:02.409-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:21:02.410-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:22:36.559-0300] {processor.py:186} INFO - Started process (PID=57910) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:22:36.564-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:22:36.566-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:22:36.565-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:22:36.573-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:22:36.654-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:22:36.654-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:22:36.662-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:22:36.662-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:22:36.662-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:22:36.662-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:22:36.663-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:22:36.663-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:22:36.663-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:22:36.663-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:22:37.046-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:22:37.044-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:22:37.047-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:22:37.046-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:22:37.047-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:22:37.047-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:22:37.048-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:23:51.660-0300] {processor.py:186} INFO - Started process (PID=58546) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:23:51.661-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:23:51.662-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:23:51.662-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:23:51.669-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:23:51.766-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:23:51.765-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:23:51.774-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:23:51.774-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:23:51.775-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:23:51.775-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:23:51.775-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:23:51.775-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:23:51.776-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:23:51.776-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:23:51.991-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:23:51.989-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:23:51.992-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:23:51.992-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:23:51.993-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:23:51.993-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:23:51.994-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:31:35.778-0300] {processor.py:186} INFO - Started process (PID=65427) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:31:35.781-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:31:35.782-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:31:35.782-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:31:35.790-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:31:35.883-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:31:35.883-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:31:35.891-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:31:35.891-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:31:35.891-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:31:35.891-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:31:35.892-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:31:35.892-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:31:35.892-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:31:35.892-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:31:36.298-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:31:36.297-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:31:36.300-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:31:36.299-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:31:36.300-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:31:36.300-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:31:36.301-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:32:46.161-0300] {processor.py:186} INFO - Started process (PID=66338) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:32:46.162-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:32:46.163-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:32:46.163-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:32:46.171-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:32:46.255-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:32:46.255-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:32:46.265-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:32:46.265-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:32:46.266-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:32:46.266-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:32:46.266-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:32:46.266-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:32:46.267-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:32:46.267-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:32:46.307-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:32:46.305-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:32:46.308-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:32:46.307-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:32:46.308-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:32:46.308-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:32:46.309-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:35:11.442-0300] {processor.py:186} INFO - Started process (PID=68448) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:35:11.443-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:35:11.444-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:35:11.444-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:35:11.451-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:35:11.529-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:35:11.529-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:35:11.537-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:35:11.537-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:35:11.538-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:35:11.538-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:35:11.538-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:35:11.538-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:35:11.539-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:35:11.539-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:35:11.825-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:35:11.823-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:35:11.826-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:35:11.825-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:35:11.826-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:35:11.826-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:35:11.827-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:36:59.570-0300] {processor.py:186} INFO - Started process (PID=69925) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:36:59.580-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:36:59.582-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:36:59.582-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:36:59.589-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:36:59.665-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:36:59.665-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:36:59.672-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:36:59.672-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:36:59.673-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:36:59.672-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:36:59.673-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:36:59.673-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:36:59.673-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:36:59.673-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:37:00.077-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:37:00.076-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:37:00.078-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:37:00.078-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:37:00.078-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:37:00.078-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:37:00.079-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:38:47.449-0300] {processor.py:186} INFO - Started process (PID=71402) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:38:47.450-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:38:47.451-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:38:47.451-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:38:47.458-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:38:47.534-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:38:47.534-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:38:47.542-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:38:47.542-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:38:47.542-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:38:47.542-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:38:47.543-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:38:47.543-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:38:47.543-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:38:47.543-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:38:47.604-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:38:47.603-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:38:47.605-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:38:47.605-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:38:47.606-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:38:47.606-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:38:47.607-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:40:33.317-0300] {processor.py:186} INFO - Started process (PID=72866) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:40:33.318-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:40:33.319-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:40:33.319-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:40:33.326-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:40:33.402-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:40:33.402-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:40:33.409-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:40:33.409-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:40:33.409-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:40:33.409-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:40:33.410-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:40:33.409-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:40:33.410-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:40:33.410-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:40:33.668-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:40:33.666-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:40:33.669-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:40:33.668-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:40:33.669-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:40:33.669-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:40:33.670-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:42:19.600-0300] {processor.py:186} INFO - Started process (PID=74313) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:42:19.769-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:42:19.770-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:42:19.770-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:42:19.777-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:42:19.852-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:42:19.852-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:42:19.859-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:42:19.859-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:42:19.859-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:42:19.859-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:42:19.860-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:42:19.860-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:42:19.860-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:42:19.860-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:42:20.054-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:42:20.052-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:42:20.055-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:42:20.054-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:42:20.055-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:42:20.055-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:42:20.056-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:44:04.135-0300] {processor.py:186} INFO - Started process (PID=75777) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:44:04.135-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:44:04.137-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:44:04.136-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:44:04.143-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:44:04.217-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:44:04.217-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:44:04.224-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:44:04.224-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:44:04.225-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:44:04.225-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:44:04.225-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:44:04.225-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:44:04.226-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:44:04.225-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:44:04.245-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:44:04.243-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:44:04.246-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:44:04.245-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:44:04.246-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:44:04.246-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:44:04.247-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:45:52.692-0300] {processor.py:186} INFO - Started process (PID=77278) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:45:52.693-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:45:52.694-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:45:52.694-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:45:52.701-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:45:52.777-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:45:52.777-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:45:52.784-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:45:52.784-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:45:52.784-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:45:52.784-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:45:52.785-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:45:52.785-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:45:52.785-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:45:52.785-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:45:52.974-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:45:52.973-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:45:52.975-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:45:52.975-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:45:52.976-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:45:52.975-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:45:52.976-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:47:38.975-0300] {processor.py:186} INFO - Started process (PID=78760) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:47:38.976-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:47:38.977-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:47:38.977-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:47:38.984-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:47:39.060-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:47:39.060-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:47:39.067-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:47:39.067-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:47:39.067-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:47:39.067-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:47:39.068-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:47:39.068-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:47:39.068-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:47:39.068-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:47:39.141-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:47:39.140-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:47:39.142-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:47:39.142-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:47:39.143-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:47:39.143-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:47:39.143-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:49:24.781-0300] {processor.py:186} INFO - Started process (PID=80184) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:49:24.908-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:49:24.909-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:49:24.909-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:49:24.916-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:49:24.993-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:49:24.993-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:49:25.001-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:49:25.000-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:49:25.001-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:49:25.001-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:49:25.001-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:49:25.001-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:49:25.002-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:49:25.002-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:49:25.357-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:49:25.355-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:49:25.358-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:49:25.357-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:49:25.358-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:49:25.358-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:49:25.359-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:51:11.411-0300] {processor.py:186} INFO - Started process (PID=81655) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:51:11.515-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:51:11.517-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:51:11.516-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:51:11.523-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:51:11.597-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:51:11.597-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:51:11.604-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:51:11.603-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:51:11.604-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:51:11.604-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:51:11.604-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:51:11.604-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:51:11.605-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:51:11.605-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:51:11.656-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:51:11.655-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:51:11.657-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:51:11.657-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:51:11.657-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:51:11.657-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:51:11.658-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:52:55.076-0300] {processor.py:186} INFO - Started process (PID=83093) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:52:55.078-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:52:55.080-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:52:55.079-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:52:55.086-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:52:55.163-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:52:55.162-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:52:55.170-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:52:55.170-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:52:55.170-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:52:55.170-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:52:55.170-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:52:55.170-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:52:55.171-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:52:55.171-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:52:55.490-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:52:55.488-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:52:55.491-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:52:55.490-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:52:55.491-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:52:55.491-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:52:55.492-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:54:40.263-0300] {processor.py:186} INFO - Started process (PID=84565) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:54:40.431-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:54:40.432-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:54:40.432-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:54:40.439-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:54:40.516-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:54:40.516-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:54:40.524-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:54:40.524-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:54:40.524-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:54:40.524-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:54:40.524-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:54:40.524-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:54:40.525-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:54:40.525-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:54:40.610-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:54:40.609-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:54:40.611-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:54:40.611-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:54:40.612-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:54:40.611-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:54:40.612-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:56:18.905-0300] {processor.py:186} INFO - Started process (PID=85980) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:56:19.087-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:56:19.088-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:56:19.088-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:56:19.095-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:56:19.172-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:56:19.172-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:56:19.179-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:56:19.179-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:56:19.179-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:56:19.179-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:56:19.180-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:56:19.180-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:56:19.180-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:56:19.180-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:56:19.353-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:56:19.352-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:56:19.354-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:56:19.354-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:56:19.355-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:56:19.355-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:56:19.356-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:58:04.542-0300] {processor.py:186} INFO - Started process (PID=87383) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:58:04.543-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:58:04.544-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:58:04.544-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:58:04.551-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:58:04.625-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:58:04.624-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:58:04.632-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:58:04.632-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:58:04.633-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:58:04.633-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:58:04.633-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:58:04.633-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:58:04.634-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:58:04.633-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:58:04.889-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:58:04.888-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:58:04.890-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:58:04.890-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:58:04.890-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:58:04.890-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:58:04.891-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:59:51.599-0300] {processor.py:186} INFO - Started process (PID=88804) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:59:51.599-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T16:59:51.601-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:59:51.600-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:59:51.607-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T16:59:51.683-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:59:51.683-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:59:51.690-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:59:51.690-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T16:59:51.691-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:59:51.690-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T16:59:51.691-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:59:51.691-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T16:59:51.691-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:59:51.691-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T16:59:51.804-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:59:51.802-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:59:51.805-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:59:51.804-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T16:59:51.805-0300] {logging_mixin.py:190} INFO - [2024-09-08T16:59:51.805-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T16:59:51.806-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:01:37.310-0300] {processor.py:186} INFO - Started process (PID=90216) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:01:37.311-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:01:37.312-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:01:37.312-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:01:37.320-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:01:37.398-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:01:37.398-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:01:37.406-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:01:37.406-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:01:37.406-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:01:37.406-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:01:37.406-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:01:37.406-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:01:37.407-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:01:37.407-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:01:37.668-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:01:37.667-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:01:37.669-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:01:37.669-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:01:37.670-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:01:37.670-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:01:37.671-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:03:23.374-0300] {processor.py:186} INFO - Started process (PID=91634) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:03:23.375-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:03:23.376-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:03:23.376-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:03:23.382-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:03:23.459-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:03:23.459-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:03:23.466-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:03:23.466-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:03:23.467-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:03:23.467-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:03:23.467-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:03:23.467-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:03:23.467-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:03:23.467-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:03:23.956-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:03:23.954-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:03:23.957-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:03:23.956-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:03:23.957-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:03:23.957-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:03:23.958-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:05:10.627-0300] {processor.py:186} INFO - Started process (PID=93044) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:05:10.733-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:05:10.735-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:05:10.734-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:05:10.741-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:05:10.815-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:05:10.815-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:05:10.822-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:05:10.822-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:05:10.822-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:05:10.822-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:05:10.823-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:05:10.823-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:05:10.823-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:05:10.823-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:05:10.996-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:05:10.995-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:05:10.997-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:05:10.997-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:05:10.998-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:05:10.997-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:05:10.998-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:06:54.378-0300] {processor.py:186} INFO - Started process (PID=94415) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:06:54.387-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:06:54.388-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:06:54.388-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:06:54.395-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:06:54.471-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:06:54.471-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:06:54.479-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:06:54.479-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:06:54.480-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:06:54.480-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:06:54.480-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:06:54.480-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:06:54.480-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:06:54.480-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:06:54.769-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:06:54.768-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:06:54.770-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:06:54.770-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:06:54.771-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:06:54.770-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:06:54.771-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:08:40.891-0300] {processor.py:186} INFO - Started process (PID=95827) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:08:41.027-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:08:41.028-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:08:41.028-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:08:41.035-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:08:41.109-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:08:41.109-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:08:41.116-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:08:41.116-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:08:41.116-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:08:41.116-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:08:41.116-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:08:41.116-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:08:41.117-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:08:41.117-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:08:41.407-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:08:41.406-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:08:41.408-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:08:41.408-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:08:41.408-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:08:41.408-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:08:41.409-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:10:27.115-0300] {processor.py:186} INFO - Started process (PID=97251) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:10:27.115-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:10:27.116-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:10:27.116-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:10:27.123-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:10:27.199-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:10:27.199-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:10:27.206-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:10:27.206-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:10:27.206-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:10:27.206-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:10:27.207-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:10:27.206-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:10:27.207-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:10:27.207-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:10:27.391-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:10:27.390-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:10:27.392-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:10:27.392-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:10:27.393-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:10:27.393-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:10:27.394-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:12:11.651-0300] {processor.py:186} INFO - Started process (PID=98620) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:12:11.652-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:12:11.653-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:12:11.653-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:12:11.660-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:12:11.736-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:12:11.736-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:12:11.743-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:12:11.743-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:12:11.743-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:12:11.743-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:12:11.744-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:12:11.744-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:12:11.744-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:12:11.744-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:12:11.778-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:12:11.777-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:12:11.779-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:12:11.779-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:12:11.779-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:12:11.779-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:12:11.780-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:14:00.131-0300] {processor.py:186} INFO - Started process (PID=100020) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:14:00.132-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:14:00.133-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:14:00.133-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:14:00.140-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:14:00.217-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:14:00.217-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:14:00.224-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:14:00.224-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:14:00.224-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:14:00.224-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:14:00.224-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:14:00.224-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:14:00.225-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:14:00.225-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:14:00.380-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:14:00.379-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:14:00.381-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:14:00.381-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:14:00.382-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:14:00.381-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:14:00.382-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:15:43.915-0300] {processor.py:186} INFO - Started process (PID=101412) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:15:43.915-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:15:43.916-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:15:43.916-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:15:43.923-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:15:44.000-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:15:44.000-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:15:44.006-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:15:44.006-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:15:44.007-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:15:44.007-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:15:44.007-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:15:44.007-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:15:44.008-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:15:44.008-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:15:44.497-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:15:44.496-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:15:44.498-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:15:44.498-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:15:44.499-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:15:44.498-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:15:44.499-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:17:25.306-0300] {processor.py:186} INFO - Started process (PID=102718) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:17:25.307-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:17:25.308-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:17:25.308-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:17:25.315-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:17:25.390-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:17:25.390-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:17:25.397-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:17:25.397-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:17:25.397-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:17:25.397-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:17:25.398-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:17:25.398-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:17:25.398-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:17:25.398-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:17:25.875-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:17:25.873-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:17:25.876-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:17:25.875-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:17:25.876-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:17:25.876-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:17:25.877-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:19:15.856-0300] {processor.py:186} INFO - Started process (PID=104204) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:19:15.857-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:19:15.858-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:19:15.858-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:19:15.865-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:19:15.941-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:19:15.941-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:19:15.951-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:19:15.951-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:19:15.951-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:19:15.951-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:19:15.952-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:19:15.952-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:19:15.952-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:19:15.952-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:19:16.353-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:19:16.351-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:19:16.354-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:19:16.353-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:19:16.354-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:19:16.354-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:19:16.355-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:21:01.748-0300] {processor.py:186} INFO - Started process (PID=105625) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:21:01.749-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:21:01.750-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:21:01.750-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:21:01.756-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:21:01.830-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:21:01.830-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:21:01.837-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:21:01.837-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:21:01.837-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:21:01.837-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:21:01.838-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:21:01.837-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:21:01.838-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:21:01.838-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:21:01.925-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:21:01.924-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:21:01.926-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:21:01.926-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:21:01.927-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:21:01.926-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:21:01.927-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:22:47.579-0300] {processor.py:186} INFO - Started process (PID=107046) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:22:47.580-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:22:47.581-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:22:47.581-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:22:47.588-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:22:47.664-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:22:47.664-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:22:47.671-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:22:47.671-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:22:47.671-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:22:47.671-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:22:47.672-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:22:47.672-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:22:47.672-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:22:47.672-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:22:48.131-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:22:48.129-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:22:48.132-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:22:48.132-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:22:48.132-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:22:48.132-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:22:48.133-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:24:28.640-0300] {processor.py:186} INFO - Started process (PID=108391) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:24:28.641-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:24:28.642-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:24:28.642-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:24:28.649-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:24:28.725-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:24:28.725-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:24:28.733-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:24:28.733-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:24:28.733-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:24:28.733-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:24:28.734-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:24:28.734-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:24:28.734-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:24:28.734-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:24:28.901-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:24:28.899-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:24:28.902-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:24:28.902-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:24:28.902-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:24:28.902-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:24:28.903-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:26:14.302-0300] {processor.py:186} INFO - Started process (PID=109780) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:26:14.303-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:26:14.304-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:26:14.304-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:26:14.311-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:26:14.388-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:26:14.387-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:26:14.395-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:26:14.394-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:26:14.395-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:26:14.395-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:26:14.395-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:26:14.395-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:26:14.396-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:26:14.396-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:26:14.882-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:26:14.881-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:26:14.883-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:26:14.883-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:26:14.883-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:26:14.883-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:26:14.884-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:28:01.806-0300] {processor.py:186} INFO - Started process (PID=111218) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:28:01.807-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:28:01.808-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:28:01.808-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:28:01.814-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:28:01.891-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:28:01.891-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:28:01.898-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:28:01.898-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:28:01.898-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:28:01.898-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:28:01.899-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:28:01.898-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:28:01.899-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:28:01.899-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:28:02.310-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:28:02.309-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:28:02.311-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:28:02.311-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:28:02.312-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:28:02.312-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:28:02.312-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:29:36.439-0300] {processor.py:186} INFO - Started process (PID=112437) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:29:36.542-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:29:36.544-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:29:36.543-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:29:36.551-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:29:36.626-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:29:36.626-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:29:36.633-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:29:36.632-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:29:36.633-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:29:36.633-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:29:36.633-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:29:36.633-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:29:36.634-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:29:36.634-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:29:36.902-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:29:36.901-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:29:36.903-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:29:36.903-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:29:36.904-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:29:36.903-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:29:36.904-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:31:06.356-0300] {processor.py:186} INFO - Started process (PID=113654) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:31:06.357-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:31:06.358-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:31:06.358-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:31:06.364-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:31:06.443-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:31:06.443-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:31:06.452-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:31:06.452-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:31:06.452-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:31:06.452-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:31:06.453-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:31:06.452-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:31:06.453-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:31:06.453-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:31:06.621-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:31:06.620-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:31:06.622-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:31:06.622-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:31:06.622-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:31:06.622-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:31:06.623-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:32:42.878-0300] {processor.py:186} INFO - Started process (PID=114923) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:32:42.879-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:32:42.880-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:32:42.880-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:32:42.887-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:32:42.964-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:32:42.964-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:32:42.972-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:32:42.971-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:32:42.972-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:32:42.972-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:32:42.972-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:32:42.972-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:32:42.973-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:32:42.973-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:32:43.079-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:32:43.078-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:32:43.080-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:32:43.080-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:32:43.081-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:32:43.081-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:32:43.082-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:34:23.957-0300] {processor.py:186} INFO - Started process (PID=116219) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:34:24.125-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:34:24.127-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:34:24.126-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:34:24.133-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:34:24.208-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:34:24.208-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:34:24.215-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:34:24.215-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:34:24.216-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:34:24.216-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:34:24.216-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:34:24.216-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:34:24.216-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:34:24.216-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:34:24.298-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:34:24.296-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:34:24.299-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:34:24.298-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:34:24.299-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:34:24.299-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:34:24.300-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:36:03.987-0300] {processor.py:186} INFO - Started process (PID=117563) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:36:03.988-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:36:03.989-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:36:03.989-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:36:03.996-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:36:04.071-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:36:04.071-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:36:04.078-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:36:04.078-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:36:04.079-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:36:04.078-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:36:04.079-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:36:04.079-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:36:04.079-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:36:04.079-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:36:04.100-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:36:04.099-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:36:04.101-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:36:04.101-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:36:04.101-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:36:04.101-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:36:04.102-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:37:45.479-0300] {processor.py:186} INFO - Started process (PID=118926) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:37:45.480-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:37:45.481-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:37:45.481-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:37:45.488-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:37:45.563-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:37:45.563-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:37:45.572-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:37:45.571-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:37:45.572-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:37:45.572-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:37:45.572-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:37:45.572-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:37:45.573-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:37:45.573-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:37:45.968-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:37:45.967-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:37:45.970-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:37:45.969-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:37:45.970-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:37:45.970-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:37:45.971-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:39:15.436-0300] {processor.py:186} INFO - Started process (PID=120097) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:39:15.437-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:39:15.438-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:39:15.438-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:39:15.445-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:39:15.522-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:39:15.522-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:39:15.530-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:39:15.530-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:39:15.530-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:39:15.530-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:39:15.531-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:39:15.531-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:39:15.531-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:39:15.531-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:39:15.550-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:39:15.549-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:39:15.551-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:39:15.551-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:39:15.551-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:39:15.551-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:39:15.552-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:40:54.758-0300] {processor.py:186} INFO - Started process (PID=121426) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:40:54.761-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:40:54.762-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:40:54.762-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:40:54.769-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:40:54.843-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:40:54.843-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:40:54.851-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:40:54.851-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:40:54.851-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:40:54.851-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:40:54.852-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:40:54.852-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:40:54.852-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:40:54.852-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:40:55.156-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:40:55.154-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:40:55.157-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:40:55.156-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:40:55.157-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:40:55.157-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:40:55.158-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:42:24.750-0300] {processor.py:186} INFO - Started process (PID=122641) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:42:24.751-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:42:24.752-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:42:24.752-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:42:24.759-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:42:24.833-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:42:24.833-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:42:24.840-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:42:24.840-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:42:24.840-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:42:24.840-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:42:24.841-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:42:24.841-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:42:24.841-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:42:24.841-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:42:25.213-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:42:25.211-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:42:25.214-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:42:25.213-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:42:25.214-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:42:25.214-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:42:25.215-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:43:58.333-0300] {processor.py:186} INFO - Started process (PID=123884) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:43:58.334-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:43:58.335-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:43:58.335-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:43:58.342-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:43:58.418-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:43:58.418-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:43:58.427-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:43:58.426-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:43:58.427-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:43:58.427-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:43:58.427-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:43:58.427-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:43:58.428-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:43:58.428-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:43:58.864-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:43:58.863-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:43:58.865-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:43:58.865-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:43:58.865-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:43:58.865-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:43:58.866-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:45:33.931-0300] {processor.py:186} INFO - Started process (PID=125134) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:45:33.932-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:45:33.933-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:45:33.933-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:45:33.939-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:45:34.018-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:45:34.018-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:45:34.025-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:45:34.025-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:45:34.025-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:45:34.025-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:45:34.026-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:45:34.026-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:45:34.026-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:45:34.026-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:45:34.381-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:45:34.379-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:45:34.382-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:45:34.381-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:45:34.382-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:45:34.382-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:45:34.383-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:47:40.502-0300] {processor.py:186} INFO - Started process (PID=127256) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:47:40.503-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:47:40.505-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:47:40.504-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:47:40.512-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:47:40.597-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:47:40.597-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:47:40.606-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:47:40.606-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:47:40.607-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:47:40.607-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:47:40.607-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:47:40.607-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:47:40.607-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:47:40.607-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:47:41.031-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:47:41.030-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:47:41.032-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:47:41.032-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:47:41.033-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:47:41.033-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:47:41.033-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:49:39.869-0300] {processor.py:186} INFO - Started process (PID=129075) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:49:39.870-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:49:39.872-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:49:39.872-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:49:39.879-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:49:39.964-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:49:39.963-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:49:39.972-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:49:39.972-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:49:39.973-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:49:39.973-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:49:39.973-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:49:39.973-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:49:39.973-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:49:39.973-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:49:40.413-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:49:40.411-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:49:40.416-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:49:40.415-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:49:40.416-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:49:40.416-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:49:40.418-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:52:13.483-0300] {processor.py:186} INFO - Started process (PID=131203) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:52:13.484-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:52:13.485-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:52:13.485-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:52:13.493-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:52:13.582-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:52:13.582-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:52:13.591-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:52:13.590-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:52:13.591-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:52:13.591-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:52:13.591-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:52:13.591-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:52:13.592-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:52:13.592-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:52:13.606-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:52:13.605-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:52:13.607-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:52:13.607-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:52:13.608-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:52:13.608-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:52:13.609-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:54:09.916-0300] {processor.py:186} INFO - Started process (PID=132694) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:54:09.917-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:54:09.918-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:54:09.918-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:54:09.925-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:54:10.012-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:54:10.012-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:54:10.020-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:54:10.020-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:54:10.020-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:54:10.020-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:54:10.021-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:54:10.021-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:54:10.021-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:54:10.021-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:54:10.447-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:54:10.445-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:54:10.448-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:54:10.447-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:54:10.448-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:54:10.448-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:54:10.449-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:56:05.783-0300] {processor.py:186} INFO - Started process (PID=134168) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:56:05.784-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:56:05.786-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:56:05.785-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:56:05.795-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:56:05.894-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:56:05.894-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:56:05.903-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:56:05.903-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:56:05.904-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:56:05.903-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:56:05.904-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:56:05.904-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:56:05.904-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:56:05.904-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:56:06.198-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:56:06.196-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:56:06.199-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:56:06.198-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:56:06.199-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:56:06.199-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:56:06.200-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:57:52.210-0300] {processor.py:186} INFO - Started process (PID=135514) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:57:52.211-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:57:52.213-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:57:52.212-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:57:52.220-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:57:52.317-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:57:52.316-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:57:52.324-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:57:52.324-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:57:52.325-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:57:52.325-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:57:52.325-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:57:52.325-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:57:52.326-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:57:52.326-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:57:52.336-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:57:52.334-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:57:52.337-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:57:52.337-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:57:52.338-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:57:52.338-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:57:52.338-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:59:50.307-0300] {processor.py:186} INFO - Started process (PID=137070) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:59:50.308-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T17:59:50.310-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:59:50.309-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:59:50.316-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T17:59:50.400-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:59:50.400-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:59:50.408-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:59:50.408-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T17:59:50.409-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:59:50.408-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T17:59:50.409-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:59:50.409-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T17:59:50.409-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:59:50.409-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T17:59:50.568-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:59:50.566-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:59:50.569-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:59:50.568-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T17:59:50.569-0300] {logging_mixin.py:190} INFO - [2024-09-08T17:59:50.569-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T17:59:50.570-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:01:41.302-0300] {processor.py:186} INFO - Started process (PID=138593) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:01:41.303-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:01:41.305-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:01:41.304-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:01:41.311-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:01:41.404-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:01:41.404-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:01:41.412-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:01:41.411-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:01:41.412-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:01:41.412-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:01:41.412-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:01:41.412-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:01:41.413-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:01:41.413-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:01:41.783-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:01:41.781-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:01:41.784-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:01:41.783-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:01:41.784-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:01:41.784-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:01:41.786-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:03:31.155-0300] {processor.py:186} INFO - Started process (PID=140022) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:03:31.156-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:03:31.157-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:03:31.157-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:03:31.164-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:03:31.245-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:03:31.245-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:03:31.254-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:03:31.254-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:03:31.254-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:03:31.254-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:03:31.255-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:03:31.254-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:03:31.255-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:03:31.255-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:03:31.637-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:03:31.636-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:03:31.638-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:03:31.638-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:03:31.639-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:03:31.639-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:03:31.640-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:05:16.850-0300] {processor.py:186} INFO - Started process (PID=141626) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:05:16.850-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:05:16.852-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:05:16.852-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:05:16.859-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:05:16.951-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:05:16.951-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:05:16.958-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:05:16.958-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:05:16.959-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:05:16.959-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:05:16.959-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:05:16.959-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:05:16.960-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:05:16.960-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:05:16.975-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:05:16.974-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:05:16.976-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:05:16.976-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:05:16.977-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:05:16.977-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:05:16.978-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:07:46.822-0300] {processor.py:186} INFO - Started process (PID=144228) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:07:46.822-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:07:46.824-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:07:46.823-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:07:46.830-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:07:47.004-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:07:47.004-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:07:47.011-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:07:47.011-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:07:47.012-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:07:47.012-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:07:47.012-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:07:47.012-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:07:47.013-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:07:47.012-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:07:47.194-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:07:47.193-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:07:47.195-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:07:47.195-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:07:47.196-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:07:47.196-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:07:47.197-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:10:07.096-0300] {processor.py:186} INFO - Started process (PID=146205) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:10:07.097-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:10:07.099-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:10:07.098-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:10:07.111-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:10:07.210-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:10:07.210-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:10:07.220-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:10:07.220-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:10:07.221-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:10:07.220-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:10:07.221-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:10:07.221-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:10:07.221-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:10:07.221-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:10:07.343-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:10:07.341-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:10:07.344-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:10:07.343-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:10:07.344-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:10:07.344-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:10:07.345-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:12:38.793-0300] {processor.py:186} INFO - Started process (PID=148637) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:12:38.894-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:12:38.895-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:12:38.895-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:12:38.906-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:12:39.142-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:12:39.142-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:12:39.150-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:12:39.150-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:12:39.151-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:12:39.151-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:12:39.152-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:12:39.151-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:12:39.152-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:12:39.152-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:12:39.204-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:12:39.202-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:12:39.206-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:12:39.205-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:12:39.206-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:12:39.206-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:12:39.207-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:15:04.274-0300] {processor.py:186} INFO - Started process (PID=150534) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:15:04.275-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:15:04.276-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:15:04.276-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:15:04.284-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:15:04.363-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:15:04.362-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:15:04.472-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:15:04.471-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:15:04.472-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:15:04.472-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:15:04.473-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:15:04.472-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:15:04.473-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:15:04.473-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:15:04.958-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:15:04.957-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:15:04.959-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:15:04.959-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:15:04.960-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:15:04.960-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:15:04.961-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:16:42.629-0300] {processor.py:186} INFO - Started process (PID=151674) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:16:42.630-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:16:42.632-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:16:42.631-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:16:42.642-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:16:42.809-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:16:42.808-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:16:42.815-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:16:42.815-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:16:42.815-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:16:42.815-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:16:42.816-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:16:42.816-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:16:42.816-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:16:42.816-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:16:42.862-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:16:42.861-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:16:42.863-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:16:42.863-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:16:42.863-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:16:42.863-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:16:42.864-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:17:50.336-0300] {processor.py:186} INFO - Started process (PID=152223) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:17:50.337-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:17:50.338-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:17:50.337-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:17:50.345-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:17:50.527-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:17:50.527-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:17:50.534-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:17:50.534-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:17:50.535-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:17:50.535-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:17:50.535-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:17:50.535-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:17:50.535-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:17:50.535-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:17:50.683-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:17:50.681-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:17:50.684-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:17:50.683-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:17:50.684-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:17:50.684-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:17:50.685-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:19:17.451-0300] {processor.py:186} INFO - Started process (PID=152871) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:19:17.452-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:19:17.452-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:19:17.452-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:19:17.461-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:19:17.547-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:19:17.547-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:19:17.648-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:19:17.647-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:19:17.648-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:19:17.648-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:19:17.648-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:19:17.648-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:19:17.649-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:19:17.649-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:19:18.122-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:19:18.120-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:19:18.123-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:19:18.122-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:19:18.123-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:19:18.123-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:19:18.124-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:20:47.510-0300] {processor.py:186} INFO - Started process (PID=153504) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:20:47.511-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:20:47.512-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:20:47.512-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:20:47.519-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:20:47.610-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:20:47.609-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:20:47.716-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:20:47.716-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:20:47.716-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:20:47.716-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:20:47.717-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:20:47.716-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:20:47.717-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:20:47.717-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:20:48.119-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:20:48.118-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:20:48.120-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:20:48.120-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:20:48.121-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:20:48.120-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:20:48.121-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:22:56.714-0300] {processor.py:186} INFO - Started process (PID=155125) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:22:56.715-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:22:56.716-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:22:56.716-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:22:56.724-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:22:56.907-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:22:56.907-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:22:56.916-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:22:56.916-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:22:56.916-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:22:56.916-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:22:56.917-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:22:56.917-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:22:56.917-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:22:56.917-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:22:56.955-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:22:56.953-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:22:56.956-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:22:56.956-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:22:56.957-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:22:56.957-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:22:56.958-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:23:50.552-0300] {processor.py:186} INFO - Started process (PID=155951) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:23:50.557-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:23:50.558-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:23:50.557-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:23:50.565-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:23:50.751-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:23:50.751-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:23:50.758-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:23:50.758-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:23:50.759-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:23:50.759-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:23:50.759-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:23:50.759-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:23:50.760-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:23:50.760-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:23:50.825-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:23:50.823-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:23:50.827-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:23:50.826-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:23:50.828-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:23:50.828-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:23:50.830-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:25:25.497-0300] {processor.py:186} INFO - Started process (PID=156664) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:25:25.498-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:25:25.499-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:25:25.499-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:25:25.509-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:25:25.736-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:25:25.736-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:25:25.745-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:25:25.745-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:25:25.745-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:25:25.745-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:25:25.746-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:25:25.746-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:25:25.746-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:25:25.746-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:25:26.090-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:25:26.088-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:25:26.092-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:25:26.091-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:25:26.092-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:25:26.092-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:25:26.093-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:26:14.991-0300] {processor.py:186} INFO - Started process (PID=157025) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:26:14.992-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:26:14.993-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:26:14.993-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:26:15.001-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:26:15.244-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:26:15.243-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:26:15.253-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:26:15.252-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:26:15.253-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:26:15.253-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:26:15.254-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:26:15.254-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:26:15.255-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:26:15.255-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:26:15.728-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:26:15.726-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:26:15.731-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:26:15.730-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:26:15.731-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:26:15.731-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:26:15.732-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:27:56.182-0300] {processor.py:186} INFO - Started process (PID=158296) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:27:56.183-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:27:56.184-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:27:56.184-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:27:56.190-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:27:56.374-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:27:56.374-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:27:56.382-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:27:56.382-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:27:56.383-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:27:56.382-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:27:56.383-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:27:56.383-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:27:56.383-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:27:56.383-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:27:56.444-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:27:56.443-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:27:56.445-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:27:56.445-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:27:56.445-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:27:56.445-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:27:56.446-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:29:14.888-0300] {processor.py:186} INFO - Started process (PID=159238) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:29:14.889-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:29:14.890-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:29:14.890-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:29:14.897-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:29:14.981-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:29:14.981-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:29:14.989-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:29:14.989-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:29:14.989-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:29:14.989-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:29:14.990-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:29:14.990-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:29:14.990-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:29:14.990-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:29:15.149-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:29:15.147-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:29:15.150-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:29:15.149-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:29:15.151-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:29:15.151-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:29:15.152-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:30:47.163-0300] {processor.py:186} INFO - Started process (PID=160076) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:30:47.271-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:30:47.272-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:30:47.272-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:30:47.279-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:30:47.360-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:30:47.360-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:30:47.368-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:30:47.368-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:30:47.368-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:30:47.368-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:30:47.369-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:30:47.369-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:30:47.369-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:30:47.369-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:30:47.405-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:30:47.404-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:30:47.406-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:30:47.406-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:30:47.407-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:30:47.406-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:30:47.407-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:32:09.969-0300] {processor.py:186} INFO - Started process (PID=160768) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:32:09.970-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:32:09.971-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:32:09.971-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:32:09.978-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:32:10.067-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:32:10.066-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:32:10.078-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:32:10.078-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:32:10.079-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:32:10.078-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:32:10.079-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:32:10.079-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:32:10.079-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:32:10.079-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:32:10.425-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:32:10.423-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:32:10.426-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:32:10.425-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:32:10.426-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:32:10.426-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:32:10.427-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:33:22.822-0300] {processor.py:186} INFO - Started process (PID=161563) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:33:22.823-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:33:22.823-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:33:22.823-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:33:22.831-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:33:22.911-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:33:22.911-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:33:22.920-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:33:22.920-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:33:22.920-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:33:22.920-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:33:22.921-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:33:22.921-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:33:22.921-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:33:22.921-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:33:23.220-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:33:23.218-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:33:23.221-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:33:23.221-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:33:23.222-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:33:23.221-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:33:23.222-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:34:15.843-0300] {processor.py:186} INFO - Started process (PID=161928) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:34:15.844-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:34:15.845-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:34:15.845-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:34:15.852-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:34:15.944-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:34:15.943-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:34:15.952-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:34:15.952-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:34:15.952-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:34:15.952-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:34:15.953-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:34:15.953-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:34:15.953-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:34:15.953-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:34:16.307-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:34:16.305-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:34:16.308-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:34:16.308-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:34:16.308-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:34:16.308-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:34:16.309-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:35:31.410-0300] {processor.py:186} INFO - Started process (PID=162482) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:35:31.410-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:35:31.411-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:35:31.411-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:35:31.418-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:35:31.498-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:35:31.498-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:35:31.506-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:35:31.505-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:35:31.506-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:35:31.506-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:35:31.506-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:35:31.506-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:35:31.507-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:35:31.507-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:35:31.818-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:35:31.816-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:35:31.819-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:35:31.818-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:35:31.819-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:35:31.819-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:35:31.820-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:36:49.944-0300] {processor.py:186} INFO - Started process (PID=163079) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:36:49.945-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:36:49.946-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:36:49.946-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:36:49.953-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:36:50.032-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:36:50.032-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:36:50.039-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:36:50.039-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:36:50.040-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:36:50.040-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:36:50.040-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:36:50.040-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:36:50.041-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:36:50.040-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:36:50.190-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:36:50.188-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:36:50.191-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:36:50.191-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:36:50.192-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:36:50.191-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:36:50.192-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:38:10.916-0300] {processor.py:186} INFO - Started process (PID=163654) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:38:10.916-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:38:10.917-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:38:10.917-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:38:10.925-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:38:11.009-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:38:11.009-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:38:11.017-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:38:11.017-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:38:11.017-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:38:11.017-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:38:11.018-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:38:11.018-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:38:11.018-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:38:11.018-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:38:11.251-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:38:11.249-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:38:11.252-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:38:11.251-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:38:11.252-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:38:11.252-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:38:11.253-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:39:34.114-0300] {processor.py:186} INFO - Started process (PID=164374) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:39:34.128-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:39:34.129-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:39:34.128-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:39:34.135-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:39:34.216-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:39:34.216-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:39:34.225-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:39:34.225-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:39:34.225-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:39:34.225-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:39:34.226-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:39:34.225-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:39:34.226-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:39:34.226-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:39:34.546-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:39:34.544-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:39:34.546-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:39:34.546-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:39:34.547-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:39:34.547-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:39:34.548-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:40:52.942-0300] {processor.py:186} INFO - Started process (PID=164937) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:40:52.943-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:40:52.944-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:40:52.944-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:40:52.951-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:40:53.037-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:40:53.037-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:40:53.047-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:40:53.046-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:40:53.047-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:40:53.047-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:40:53.048-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:40:53.048-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:40:53.048-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:40:53.048-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:40:53.293-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:40:53.291-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:40:53.294-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:40:53.293-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:40:53.294-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:40:53.294-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:40:53.295-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:42:12.347-0300] {processor.py:186} INFO - Started process (PID=166326) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:42:12.348-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:42:12.349-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:42:12.349-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:42:12.356-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:42:12.440-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:42:12.440-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:42:12.450-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:42:12.450-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:42:12.451-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:42:12.450-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:42:12.451-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:42:12.451-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:42:12.451-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:42:12.451-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:42:12.628-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:42:12.627-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:42:12.630-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:42:12.629-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:42:12.630-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:42:12.630-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:42:12.631-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:43:31.941-0300] {processor.py:186} INFO - Started process (PID=167305) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:43:31.942-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:43:31.942-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:43:31.942-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:43:31.949-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:43:32.032-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:43:32.032-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:43:32.040-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:43:32.040-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:43:32.041-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:43:32.041-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:43:32.041-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:43:32.041-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:43:32.042-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:43:32.042-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:43:32.135-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:43:32.134-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:43:32.136-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:43:32.136-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:43:32.137-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:43:32.136-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:43:32.137-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:44:53.493-0300] {processor.py:186} INFO - Started process (PID=167921) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:44:53.500-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:44:53.501-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:44:53.501-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:44:53.508-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:44:53.588-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:44:53.587-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:44:53.595-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:44:53.595-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:44:53.596-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:44:53.596-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:44:53.596-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:44:53.596-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:44:53.596-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:44:53.596-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:44:53.709-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:44:53.707-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:44:53.710-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:44:53.709-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:44:53.710-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:44:53.710-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:44:53.711-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:46:09.733-0300] {processor.py:186} INFO - Started process (PID=168451) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:46:09.734-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:46:09.734-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:46:09.734-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:46:09.741-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:46:09.821-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:46:09.821-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:46:09.829-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:46:09.829-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:46:09.829-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:46:09.829-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:46:09.830-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:46:09.829-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:46:09.830-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:46:09.830-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:46:10.006-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:46:10.004-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:46:10.007-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:46:10.006-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:46:10.007-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:46:10.007-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:46:10.008-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:47:23.932-0300] {processor.py:186} INFO - Started process (PID=168985) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:47:23.932-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:47:23.933-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:47:23.933-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:47:23.940-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:47:24.018-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:47:24.017-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:47:24.026-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:47:24.025-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:47:24.026-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:47:24.026-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:47:24.026-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:47:24.026-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:47:24.027-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:47:24.027-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:47:24.080-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:47:24.079-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:47:24.081-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:47:24.081-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:47:24.082-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:47:24.082-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:47:24.083-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:48:36.804-0300] {processor.py:186} INFO - Started process (PID=169792) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:48:36.805-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:48:36.805-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:48:36.805-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:48:36.812-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:48:36.890-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:48:36.889-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:48:36.897-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:48:36.897-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:48:36.897-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:48:36.897-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:48:36.898-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:48:36.898-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:48:36.898-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:48:36.898-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:48:37.268-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:48:37.266-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:48:37.270-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:48:37.269-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:48:37.270-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:48:37.270-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:48:37.271-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:49:58.012-0300] {processor.py:186} INFO - Started process (PID=170622) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:49:58.013-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:49:58.014-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:49:58.014-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:49:58.020-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:49:58.101-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:49:58.101-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:49:58.109-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:49:58.109-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:49:58.110-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:49:58.110-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:49:58.110-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:49:58.110-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:49:58.111-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:49:58.110-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:49:58.227-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:49:58.226-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:49:58.228-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:49:58.228-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:49:58.229-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:49:58.229-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:49:58.229-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:51:10.655-0300] {processor.py:186} INFO - Started process (PID=171447) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:51:10.656-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:51:10.657-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:51:10.656-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:51:10.666-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:51:10.755-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:51:10.755-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:51:10.763-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:51:10.762-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:51:10.763-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:51:10.763-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:51:10.763-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:51:10.763-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:51:10.764-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:51:10.764-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:51:11.039-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:51:11.038-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:51:11.040-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:51:11.040-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:51:11.041-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:51:11.041-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:51:11.042-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:52:30.310-0300] {processor.py:186} INFO - Started process (PID=172212) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:52:30.311-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:52:30.312-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:52:30.311-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:52:30.318-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:52:30.398-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:52:30.398-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:52:30.406-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:52:30.406-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:52:30.406-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:52:30.406-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:52:30.407-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:52:30.407-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:52:30.407-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:52:30.407-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:52:30.726-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:52:30.725-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:52:30.727-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:52:30.727-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:52:30.728-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:52:30.728-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:52:30.729-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:53:54.557-0300] {processor.py:186} INFO - Started process (PID=172858) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:53:54.557-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:53:54.558-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:53:54.558-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:53:54.565-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:53:54.646-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:53:54.645-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:53:54.653-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:53:54.653-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:53:54.654-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:53:54.654-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:53:54.654-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:53:54.654-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:53:54.655-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:53:54.654-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:53:54.847-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:53:54.845-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:53:54.848-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:53:54.847-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:53:54.848-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:53:54.848-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:53:54.849-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:55:05.991-0300] {processor.py:186} INFO - Started process (PID=173430) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:55:05.992-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:55:05.993-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:55:05.993-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:55:06.001-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:55:06.086-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:55:06.086-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:55:06.094-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:55:06.094-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:55:06.094-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:55:06.094-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:55:06.095-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:55:06.095-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:55:06.095-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:55:06.095-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:55:06.586-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:55:06.584-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:55:06.587-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:55:06.586-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:55:06.587-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:55:06.587-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:55:06.588-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:56:22.316-0300] {processor.py:186} INFO - Started process (PID=174075) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:56:22.327-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:56:22.328-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:56:22.327-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:56:22.335-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:56:22.417-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:56:22.417-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:56:22.426-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:56:22.426-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:56:22.426-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:56:22.426-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:56:22.427-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:56:22.427-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:56:22.427-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:56:22.427-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:56:22.671-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:56:22.669-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:56:22.672-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:56:22.672-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:56:22.673-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:56:22.672-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:56:22.673-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:57:38.600-0300] {processor.py:186} INFO - Started process (PID=174635) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:57:38.601-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:57:38.602-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:57:38.602-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:57:38.609-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:57:38.686-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:57:38.686-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:57:38.695-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:57:38.695-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:57:38.695-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:57:38.695-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:57:38.696-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:57:38.695-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:57:38.696-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:57:38.696-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:57:39.026-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:57:39.024-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:57:39.027-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:57:39.026-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:57:39.027-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:57:39.027-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:57:39.028-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:59:03.037-0300] {processor.py:186} INFO - Started process (PID=175327) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:59:03.037-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T18:59:03.038-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:59:03.038-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:59:03.046-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T18:59:03.126-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:59:03.126-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:59:03.134-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:59:03.133-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T18:59:03.134-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:59:03.134-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T18:59:03.134-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:59:03.134-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T18:59:03.135-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:59:03.135-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T18:59:03.534-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:59:03.533-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:59:03.535-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:59:03.535-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T18:59:03.536-0300] {logging_mixin.py:190} INFO - [2024-09-08T18:59:03.535-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T18:59:03.536-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:00:26.396-0300] {processor.py:186} INFO - Started process (PID=176347) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:00:26.396-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T19:00:26.397-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:00:26.397-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:00:26.404-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:00:26.486-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:00:26.486-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:00:26.494-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:00:26.494-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T19:00:26.494-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:00:26.494-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T19:00:26.495-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:00:26.495-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T19:00:26.495-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:00:26.495-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T19:00:26.772-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:00:26.770-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:00:26.773-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:00:26.772-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:00:26.773-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:00:26.773-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:00:26.774-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:01:48.798-0300] {processor.py:186} INFO - Started process (PID=177102) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:01:48.805-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T19:01:48.806-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:01:48.806-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:01:48.813-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:01:48.897-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:01:48.897-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:01:48.906-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:01:48.905-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T19:01:48.906-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:01:48.906-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T19:01:48.907-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:01:48.906-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T19:01:48.907-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:01:48.907-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T19:01:49.169-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:01:49.168-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:01:49.170-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:01:49.170-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:01:49.171-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:01:49.171-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:01:49.172-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:03:14.772-0300] {processor.py:186} INFO - Started process (PID=177852) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:03:14.773-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T19:03:14.774-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:03:14.774-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:03:14.786-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:03:14.900-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:03:14.900-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:03:14.909-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:03:14.909-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T19:03:14.910-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:03:14.910-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T19:03:14.910-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:03:14.910-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T19:03:14.910-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:03:14.910-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T19:03:14.989-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:03:14.988-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:03:14.990-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:03:14.990-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:03:14.991-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:03:14.991-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:03:14.992-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:04:34.616-0300] {processor.py:186} INFO - Started process (PID=178512) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:04:34.617-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T19:04:34.618-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:04:34.618-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:04:34.626-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:04:34.707-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:04:34.707-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:04:34.715-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:04:34.715-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T19:04:34.715-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:04:34.715-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T19:04:34.716-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:04:34.716-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T19:04:34.716-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:04:34.716-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T19:04:35.017-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:04:35.016-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:04:35.018-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:04:35.017-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:04:35.018-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:04:35.018-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:04:35.019-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:05:57.347-0300] {processor.py:186} INFO - Started process (PID=179175) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:05:57.348-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T19:05:57.349-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:05:57.349-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:05:57.356-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:05:57.434-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:05:57.434-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:05:57.442-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:05:57.442-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T19:05:57.442-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:05:57.442-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T19:05:57.443-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:05:57.443-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T19:05:57.443-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:05:57.443-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T19:05:57.492-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:05:57.491-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:05:57.493-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:05:57.493-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:05:57.494-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:05:57.494-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:05:57.495-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:07:16.659-0300] {processor.py:186} INFO - Started process (PID=179799) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:07:16.660-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T19:07:16.661-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:07:16.660-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:07:16.668-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args', 'example_xcom_args_with_operators' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:07:16.749-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:07:16.749-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:07:16.757-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:07:16.756-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T19:07:16.757-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:07:16.757-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T19:07:16.757-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:07:16.757-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T19:07:16.758-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:07:16.758-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T19:07:16.891-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:07:16.889-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:07:16.893-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:07:16.892-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:07:16.894-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:07:16.893-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:07:16.894-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:08:33.497-0300] {processor.py:186} INFO - Started process (PID=180847) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:08:33.509-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T19:08:33.510-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:08:33.510-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:08:33.518-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:08:33.604-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:08:33.604-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:08:33.613-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:08:33.612-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T19:08:33.613-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:08:33.613-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T19:08:33.614-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:08:33.614-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T19:08:33.614-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:08:33.614-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T19:08:33.727-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:08:33.726-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:08:33.729-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:08:33.728-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:08:33.729-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:08:33.729-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:08:33.730-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:09:58.213-0300] {processor.py:186} INFO - Started process (PID=181692) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:09:58.220-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T19:09:58.221-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:09:58.221-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:09:58.229-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:09:58.313-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:09:58.313-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:09:58.320-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:09:58.320-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T19:09:58.321-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:09:58.321-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T19:09:58.321-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:09:58.321-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T19:09:58.322-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:09:58.322-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T19:09:58.493-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:09:58.491-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:09:58.494-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:09:58.493-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:09:58.494-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:09:58.494-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:09:58.495-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:11:16.045-0300] {processor.py:186} INFO - Started process (PID=182227) to work on /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:11:16.046-0300] {processor.py:914} INFO - Processing file /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py for tasks to queue
[2024-09-08T19:11:16.047-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:11:16.046-0300] {dagbag.py:587} INFO - Filling up the DagBag from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:11:16.055-0300] {processor.py:925} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_xcom_args' retrieved from /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
[2024-09-08T19:11:16.144-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:11:16.144-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:11:16.152-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:11:16.151-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args_with_operators
[2024-09-08T19:11:16.152-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:11:16.152-0300] {dag.py:3252} INFO - Creating ORM DAG for example_xcom_args
[2024-09-08T19:11:16.153-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:11:16.152-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-09-08T19:11:16.153-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:11:16.153-0300] {dag.py:4156} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-09-08T19:11:16.366-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:11:16.364-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:11:16.367-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:11:16.366-0300] {dagbag.py:697} ERROR - Failed to write serialized DAG: /home/kasten/.local/lib/python3.12/site-packages/airflow/example_dags/example_xcomargs.py
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 685, in _serialize_dag_capturing_errors
    dag_was_updated = SerializedDagModel.write_dag(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/serialized_dag.py", line 160, in write_dag
    if session.scalar(
       ^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1747, in scalar
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
[2024-09-08T19:11:16.367-0300] {logging_mixin.py:190} INFO - [2024-09-08T19:11:16.367-0300] {dag.py:3229} INFO - Sync 2 DAGs
[2024-09-08T19:11:16.368-0300] {processor.py:211} ERROR - Got an exception! Propagating...
Traceback (most recent call last):
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 207, in _run_file_processor
    _handle_dag_file_processing()
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 188, in _handle_dag_file_processing
    result: tuple[int, int, int] = dag_file_processor.process_file(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 942, in process_file
    serialize_errors = DagFileProcessor.save_dag_to_db(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/api_internal/internal_api_call.py", line 139, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 97, in wrapper
    return func(*args, session=session, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/dag_processing/processor.py", line 982, in save_dag_to_db
    import_errors = DagBag._sync_to_db(dags=dags, processor_subdir=dag_directory, session=session)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 707, in _sync_to_db
    for attempt in run_with_db_retries(logger=log):
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 443, in __iter__
    do = self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 376, in iter
    result = action(retry_state)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/tenacity/__init__.py", line 398, in <lambda>
    self._add_action_func(lambda rs: rs.outcome.result())
                                     ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dagbag.py", line 723, in _sync_to_db
    DAG.bulk_write_to_db(dags.values(), processor_subdir=processor_subdir, session=session)
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/utils/session.py", line 94, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/airflow/models/dag.py", line 3242, in bulk_write_to_db
    orm_dags: list[DagModel] = session.scalars(query).unique().all()
                               ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1778, in scalars
    return self.execute(
           ^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1716, in execute
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1555, in _connection_for_bind
    return self._transaction._connection_for_bind(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 724, in _connection_for_bind
    self._assert_active()
  File "/home/kasten/.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 604, in _assert_active
    raise sa_exc.PendingRollbackError(
sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlite3.IntegrityError) UNIQUE constraint failed: dag_tag.name, dag_tag.dag_id
[SQL: INSERT INTO dag_tag (name, dag_id) VALUES (?, ?)]
[parameters: (('example', 'example_xcom_args'), ('example', 'example_xcom_args_with_operators'))]
(Background on this error at: https://sqlalche.me/e/14/gkpj) (Background on this error at: https://sqlalche.me/e/14/7s2a)
